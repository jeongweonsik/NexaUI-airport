<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="cmmColumnHide" width="320" height="440" titletext="그리드컬럼숨김" onload="form_onload">
    <Layouts>
      <Layout height="440" width="320">
        <Grid id="grdList" taborder="0" left="20" top="20" right="20" binddataset="dsFilter" autofittype="col" ugrid="checkbox,!sort,!rowfix,!colfix,!filter,!initial" bottom="70">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="225"/>
              </Columns>
              <Rows>
                <Row size="33" band="head"/>
                <Row size="33"/>
              </Rows>
              <Band id="head">
                <Cell text="Select" expandchar="100000166"/>
              </Band>
              <Band id="body">
                <Cell text="bind:columnText"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Grid id="grd00" taborder="3" left="323" top="10" width="339" height="344" visible="false"/>
        <Button id="btnCancel" taborder="1" text="취소" width="76" height="30" cssclass="btn_POP_Secondary" onclick="btnCancel_onclick" uword="100000165" right="20" bottom="20" fittocontents="width"/>
        <Button id="btnOK" taborder="2" text="확인" height="30" tabstop="true" onclick="btnOK_onclick" cssclass="btn_POP_Primary" fittocontents="width" width="76" uword="100000221" right="btnCancel:6" bottom="20"/>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="dsFilter">
        <ColumnInfo>
          <Column id="columnText" type="STRING" size="256"/>
          <Column id="CHK" type="STRING" size="256"/>
          <Column id="columnIndex" type="STRING" size="256"/>
          <Column id="body" type="STRING" size="256"/>
          <Column id="orgSize" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsCopy"/>
    </Objects>
    <Script type="xscript5.1"><![CDATA[/**
* 그리드 편의 기능 (컬럼 숨김) 공통 폼
*@FileName  cmmColumnHide
*@Creator 	
*@CreateDate 2025/04/18
*@Desction    
************** 소스 수정 이력 ***********************************************
*  date          		Modifier                Description
*******************************************************************************
*  
*******************************************************************************
*/


/************************************************************************************************
* FORM 변수 선언 영역
************************************************************************************************/
this.fvTargetGrid; 	  //대상그리드 OBJECT
this.fvTargetDataset; //대상데이터셋 OBJECT
 
/***********************************************************************************************
* FORM EVENT 영역(onload)
/***********************************************************************************************/
this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{

	
// 	var sTitle = this.getOwnerFrame().paramTitle;
// 	this.set_titletext(sTitle);
	
	//초기값 설정
	this.fvTargetGrid = this.getOwnerFrame().pvGrid;
	this.fvTargetDataset = this.fvTargetGrid.getBindDataset();
	this.fnGetHeadText();
	
	//compare grid setting
	this.fnSetGrd();
};

/************************************************************************************************
* TRANSACTION 서비스 호출 처리
************************************************************************************************/

/************************************************************************************************
* CALLBACK 콜백 처리부분
************************************************************************************************/

/************************************************************************************************
* 사용자 FUNCTION 영역
************************************************************************************************/
/**
 * @description 비교그리드 세팅
*/
this.fnSetGrd = function()
{
	this.grd00.set_enableredraw(false);
	this.grd00.set_formats(this.fvTargetGrid.orgformat2);
	this.grd00.set_enableredraw(true);
};

/**
 * @description 그리드의 헤드정보를 받아와 콤보 세팅
*/
this.fnGetHeadText = function ()
{

	var nTarget =0;
	var arr = this.fvTargetGrid.arrprop;
	for(var n=0; n< arr.length; n++){
		var tmp = this.fvTargetGrid.arrprop[n];
		//2020.03.05 checkbox_status 추가
		if( (tmp == "checkbox" || tmp == "checkbox_status")|| tmp == "status" || tmp == "no" ){
			nTarget += 1;
		}
	}
	
	this.grdList.set_enableredraw(false);
	
	for( var i=0; i<this.fvTargetGrid.getFormatColCount(); i++)
	{
		var columnText = "";//i + "번째 컬럼 ";
		
		for (var j=0, len=this.fvTargetGrid.getCellCount("head"); j<len; j++) {
			var maxHeadRow = 0;
			var row = this.fvTargetGrid.getCellProperty("head", j, "row");
			if (maxHeadRow < row) {
				maxHeadRow = row;
			}
			var nRow = parseInt(this.fvTargetGrid.getCellProperty("head", j, "row"));
			var nCol = parseInt(this.fvTargetGrid.getCellProperty("head",j, "col"));
			var headText = this.fvTargetGrid.getCellProperty("head", j, "text");
			
			if( nRow == maxHeadRow && nCol == i ) columnText += "[" + headText + "]";
		}
		
		var nchk = 1;
		var columnIndex = i;
		
		if( this.fvTargetGrid.getRealColSize(columnIndex) == 0 ) nchk = 0;
		
		
		if(i <nTarget) continue;
		
		//if( columnText == "[순번]" || columnText == "[상태]"  || columnText == "[NO]"|| columnText == "[ICON]" || columnText == "[]") continue;
		//if( columnText == "[0]" && this.fvTargetGrid.getCellProperty("Body", i, "text") == "bind:check" ) continue;
		
		var nRow = this.dsFilter.addRow();
		this.dsFilter.setColumn(nRow, "columnText",  columnText);
		this.dsFilter.setColumn(nRow, "CHk",  		 nchk);
		this.dsFilter.setColumn(nRow, "columnIndex", columnIndex);
	}
	this.grdList.set_enableredraw(true);
};

/************************************************************************************************
* 각 COMPONENT 별 EVENT 영역
************************************************************************************************/
this.btnCancel_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.close();
};

this.btnOK_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	//check validation 
	var nRowCnt = this.dsFilter.getRowCount();
	var checkcount = 0 ;
	for( var i=0; i<nRowCnt; i++)
	{
		var nChk    = this.dsFilter.getColumn(i, "CHK");
		if(nChk == 1){
			checkcount++;
		}
	}
	if(checkcount == 0){
		var sNodataTxt = nexacro.getEnvironmentVariable("evLanguage") == "ko" ? "최소 한컬럼은 선택해야합니다." : "At least one column must be selected." ;	// 현재 언어
		this.gfnAlert(sNodataTxt);
		return;
	}
	
	
	var nTarget =0;
	var arr = this.fvTargetGrid.arrprop;
	for(var n=0; n< arr.length; n++){
		var tmp = this.fvTargetGrid.arrprop[n];
		//2020.03.05 checkbox_status 추가
		if( (tmp == "checkbox" || tmp == "checkbox_status")|| tmp == "status" || tmp == "no" ){
			nTarget += 1;
		}
	}
	
	this.fvTargetGrid.set_enableevent(false);
	this.fvTargetGrid.set_enableredraw(false);
	var nRowCnt = this.dsFilter.getRowCount();
	
	for( var i=0; i<nRowCnt; i++)
	{
		var nChk    = this.dsFilter.getColumn(i, "CHK");
		
		var colidx  = nexacro.toNumber(this.dsFilter.getColumn(i, "columnIndex"));
		var nSize= 0;
		if(nChk == 1){
			var orgCol = colidx - nTarget;
			
			nSize = this.grd00.getFormatColSize(orgCol);
		}
		
		var bSucc;
		bSucc = this.fvTargetGrid.setFormatColProperty(colidx, "size", nSize );
	}
	
	var vchangeformat = this.fvTargetGrid.getCurFormatString(false);
	this.fvTargetGrid.set_formats(vchangeformat);

	this.fvTargetGrid.set_enableredraw(true);
	this.fvTargetGrid.set_enableevent(true);

	this.close();
};


]]></Script>
  </Form>
</FDL>
